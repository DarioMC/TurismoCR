@model TurismoCR.Models.User;

@{
    ViewData["Title"] = "Registrar administrador";
}

<h2>@ViewData["Title"]</h2>

@using (Html.BeginForm("Reg", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @* FORM *@
    <div class="form-horizontal">
        <h4>Ingresa los datos del usuario administrador</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @* Name *@
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        @* LastName1 *@
        <div class="form-group">
            @Html.LabelFor(model => model.LastName1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.LastName1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName1, "", new { @class = "text-danger" })
            </div>
        </div>
        @* LastName2 *@
        <div class="form-group">
            @Html.LabelFor(model => model.LastName2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.LastName2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName2, "", new { @class = "text-danger" })
            </div>
        </div>
        @* ID *@
        <div class="form-group">
            @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
            </div>
        </div>
        @* BirthDate *@
        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { id="selectBirthDate", name="selectDate", type="datetime-local", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>
        @* Genre *@
        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
            @Html.DropDownListFor(model => model.Genre,
                new List<SelectListItem>
                {
                    new SelectListItem {Value = "M", Text = "Masculino" },
                    new SelectListItem {Value = "F", Text = "Femenino" },
                    new SelectListItem {Value = "O", Text = "Otro" }
                })
             @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>
        @* PhoneNumber *@
        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        @* Email *@
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        @* userName *@
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        @* Password *@
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        @* Rol *@
        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.Rol, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.Rol,
                    new List<SelectListItem>
                    {
                        new SelectListItem {Value = "Administrator", Text = "Administrador" }
                    },
                    htmlAttributes: new { @id = "userRolesDropDownList" }
                )
                @Html.ValidationMessageFor(model => model.Rol, "", new { @class = "text-danger" })
            </div>
        </div>
        @* Enabled *@
        <div class="form-group">
            @Html.LabelFor(model => model.Enabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.Enabled,
                    new List<SelectListItem>
                    {
                        new SelectListItem {Value = "true", Text = "Usuario activado"},
                        new SelectListItem {Value = "false", Text = "Usuario desactivado"}
                    }
                )
                @Html.ValidationMessageFor(model => model.Enabled, "", new { @class = "text-danger" })
            </div>
        </div>
        @* Register Btn *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Registrar" class="btn btn-success" />
            </div>
        </div>
    </div>
    @* FORM *@
}
